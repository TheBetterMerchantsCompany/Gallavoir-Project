{
	jresize: < function reg: 58 > ,
	pcall: < function reg: 58 > ,
	update: < function reg: 58 > ,
	_VERSION: Lua 5.3,
	jobject: < function reg: 58 > ,
	coroutine: {
		running: < function reg: 40 > ,
		isyieldable: < function reg: 40 > ,
		resume: < function reg: 40 > ,
		yield: < function reg: 40 > ,
		wrap: < function reg: 40 > ,
		status: < function reg: 40 > ,
		create: < function reg: 40 >
	},
	entity: {
		uniqueId: < function reg: 40 > ,
		id: < function reg: 40 > ,
		damageTeam: < function reg: 40 > ,
		entityInSight: < function reg: 40 > ,
		entityType: < function reg: 40 > ,
		isValidTarget: < function reg: 40 > ,
		position: < function reg: 40 > ,
		persistent: < function reg: 40 > ,
		distanceToEntity: < function reg: 40 >
	},
	rawset: < function reg: 58 > ,
	table: {
		unpack: < function reg: 40 > ,
		pack: < function reg: 40 > ,
		sort: < function reg: 40 > ,
		insert: < function reg: 40 > ,
		move: < function reg: 40 > ,
		concat: < function reg: 40 > ,
		remove: < function reg: 40 >
	},
	projectile: {
		power: < function reg: 40 > ,
		powerMultiplier: < function reg: 40 > ,
		collision: < function reg: 40 > ,
		setTimeToLive: < function reg: 40 > ,
		setReferenceVelocity: < function reg: 40 > ,
		processAction: < function reg: 40 > ,
		setPower: < function reg: 40 > ,
		getParameter: < function reg: 40 > ,
		die: < function reg: 40 > ,
		timeToLive: < function reg: 40 > ,
		sourceEntity: < function reg: 40 >
	},
	select: < function reg: 58 > ,
	type: < function reg: 58 > ,
	next: < function reg: 58 > ,
	rawlen: < function reg: 58 > ,
	jremove: < function reg: 58 > ,
	utf8: {
		codes: < function reg: 40 > ,
		codepoint: < function reg: 40 > ,
		char: < function reg: 40 > ,
		len: < function reg: 40 > ,
		charpattern: [, offset: < function reg: 40 >
		},
		jsize: < function reg: 58 > ,
		tostring: < function reg: 58 > ,
		rawequal: < function reg: 58 > ,
		message: {
			setHandler: < function reg: 40 >
		},
		config: {
			getParameter: < function reg: 40 >
		},
		xpcall: < function reg: 58 > ,
		mcontroller: {
			force: < function reg: 40 > ,
			setPosition: < function reg: 40 > ,
			velocity: < function reg: 40 > ,
			applyParameters: < function reg: 40 > ,
			collisionBody: < function reg: 40 > ,
			approachXVelocity: < function reg: 40 > ,
			rotate: < function reg: 40 > ,
			setRotation: < function reg: 40 > ,
			setVelocity: < function reg: 40 > ,
			collisionBoundBox: < function reg: 40 > ,
			approachVelocity: < function reg: 40 > ,
			setYPosition: < function reg: 40 > ,
			localBoundBox: < function reg: 40 > ,
			atWorldLimit: < function reg: 40 > ,
			isColliding: < function reg: 40 > ,
			liquidId: < function reg: 40 > ,
			addMomentum: < function reg: 40 > ,
			onGround: < function reg: 40 > ,
			setXVelocity: < function reg: 40 > ,
			parameters: < function reg: 40 > ,
			xVelocity: < function reg: 40 > ,
			xPosition: < function reg: 40 > ,
			stickingDirection: < function reg: 40 > ,
			yVelocity: < function reg: 40 > ,
			position: < function reg: 40 > ,
			rotation: < function reg: 40 > ,
			translate: < function reg: 40 > ,
			resetParameters: < function reg: 40 > ,
			accelerate: < function reg: 40 > ,
			isCollisionStuck: < function reg: 40 > ,
			yPosition: < function reg: 40 > ,
			approachVelocityAlongAngle: < function reg: 40 > ,
			setXPosition: < function reg: 40 > ,
			liquidPercentage: < function reg: 40 > ,
			isNullColliding: < function reg: 40 > ,
			setYVelocity: < function reg: 40 > ,
			collisionPoly: < function reg: 40 > ,
			approachYVelocity: < function reg: 40 > ,
			mass: < function reg: 40 > ,
			zeroG: < function reg: 40 >
		},
		script: {
			setUpdateDelta: < function reg: 40 > ,
			updateDt: < function reg: 40 >
		},
		assert: < function reg: 58 > ,
		print: < function reg: 58 > ,
		sb: {
			makeRandomSource: < function reg: 40 > ,
			logWarn: < function reg: 40 > ,
			logError: < function reg: 40 > ,
			staticRandomDouble: < function reg: 40 > ,
			jsonQuery: < function reg: 40 > ,
			makePerlinSource: < function reg: 40 > ,
			staticRandomI32Range: < function reg: 40 > ,
			staticRandomDoubleRange: < function reg: 40 > ,
			makeUuid: < function reg: 40 > ,
			jsonMerge: < function reg: 40 > ,
			setLogMap: < function reg: 40 > ,
			nrand: < function reg: 40 > ,
			interpolateSinEase: < function reg: 40 > ,
			staticRandomI32: < function reg: 40 > ,
			printJson: < function reg: 40 > ,
			print: < function reg: 40 > ,
			replaceTags: < function reg: 40 > ,
			logInfo: < function reg: 40 >
		},
		pairs: < function reg: 58 > ,
		self: {
			delayTimer: 0
		},
		init: < function reg: 58 > ,
		require: < function reg: 58 > ,
		root: {
			projectileConfig: < function reg: 40 > ,
			npcVariant: < function reg: 40 > ,
			questConfig: < function reg: 40 > ,
			techConfig: < function reg: 40 > ,
			itemDescriptorsMatch: < function reg: 40 > ,
			generateName: < function reg: 40 > ,
			monsterPortrait: < function reg: 40 > ,
			techType: < function reg: 40 > ,
			getMatchingTenants: < function reg: 40 > ,
			modConfig: < function reg: 40 > ,
			systemObjectTypeConfig: < function reg: 40 > ,
			tenantConfig: < function reg: 40 > ,
			evalFunction: < function reg: 40 > ,
			materialMiningSound: < function reg: 40 > ,
			monsterSkillParameter: < function reg: 40 > ,
			npcPortrait: < function reg: 40 > ,
			loadVersionedJson: < function reg: 40 > ,
			collection: < function reg: 40 > ,
			createTreasure: < function reg: 40 > ,
			evalFunction2: < function reg: 40 > ,
			collectables: < function reg: 40 > ,
			imageSpaces: < function reg: 40 > ,
			liquidId: < function reg: 40 > ,
			monsterParameters: < function reg: 40 > ,
			liquidName: < function reg: 40 > ,
			itemConfig: < function reg: 40 > ,
			createItem: < function reg: 40 > ,
			itemTags: < function reg: 40 > ,
			elementalResistance: < function reg: 40 > ,
			imageSize: < function reg: 40 > ,
			treeStemDirectory: < function reg: 40 > ,
			dungeonMetadata: < function reg: 40 > ,
			isTreasurePool: < function reg: 40 > ,
			itemType: < function reg: 40 > ,
			nonEmptyRegion: < function reg: 40 > ,
			materialConfig: < function reg: 40 > ,
			itemHasTag: < function reg: 40 > ,
			makeCurrentVersionedJson: < function reg: 40 > ,
			treeFoliageDirectory: < function reg: 40 > ,
			npcConfig: < function reg: 40 > ,
			hasTech: < function reg: 40 > ,
			projectileGravityMultiplier: < function reg: 40 > ,
			assetJson: < function reg: 40 > ,
			monsterMovementSettings: < function reg: 40 > ,
			liquidStatusEffects: < function reg: 40 > ,
			materialFootstepSound: < function reg: 40 > ,
			materialHealth: < function reg: 40 > ,
			createBiome: < function reg: 40 > ,
			liquidConfig: < function reg: 40 > ,
			recipesForItem: < function reg: 40 >
		},
		os: {
			clock: < function reg: 40 > ,
			difftime: < function reg: 40 > ,
			time: < function reg: 40 >
		},
		world: {
			containerSize: < function reg: 40 > ,
			polyContains: < function reg: 40 > ,
			entityTypeName: < function reg: 40 > ,
			npcQuery: < function reg: 40 > ,
			sendEntityMessage: < function reg: 40 > ,
			entityCanDamage: < function reg: 40 > ,
			tileIsOccupied: < function reg: 40 > ,
			liquidAlongLine: < function reg: 40 > ,
			entityHandItemDescriptor: < function reg: 40 > ,
			lineTileCollisionPoint: < function reg: 40 > ,
			itemDropItem: < function reg: 40 > ,
			environmentStatusEffects: < function reg: 40 > ,
			lightLevel: < function reg: 40 > ,
			entityHasCountOfItem: < function reg: 40 > ,
			entityHandItem: < function reg: 40 > ,
			spawnVehicle: < function reg: 40 > ,
			loungeableOccupied: < function reg: 40 > ,
			collisionBlocksAlongLine: < function reg: 40 > ,
			monsterType: < function reg: 40 > ,
			isNpc: < function reg: 40 > ,
			type: < function reg: 40 > ,
			placeMod: < function reg: 40 > ,
			threatLevel: < function reg: 40 > ,
			magnitude: < function reg: 40 > ,
			material: < function reg: 40 > ,
			polyCollision: < function reg: 40 > ,
			findPlatformerPath: < function reg: 40 > ,
			monsterQuery: < function reg: 40 > ,
			distance: < function reg: 40 > ,
			objectAt: < function reg: 40 > ,
			inSurfaceLayer: < function reg: 40 > ,
			entitySpecies: < function reg: 40 > ,
			entityExists: < function reg: 40 > ,
			npcType: < function reg: 40 > ,
			lineTileCollision: < function reg: 40 > ,
			destroyLiquid: < function reg: 40 > ,
			containerAddItems: < function reg: 40 > ,
			damageTiles: < function reg: 40 > ,
			entityPortrait: < function reg: 40 > ,
			oceanLevel: < function reg: 40 > ,
			modHueShift: < function reg: 40 > ,
			entityAggressive: < function reg: 40 > ,
			placeMaterial: < function reg: 40 > ,
			entityQuery: < function reg: 40 > ,
			farmableStage: < function reg: 40 > ,
			entityCurrency: < function reg: 40 > ,
			containerClose: < function reg: 40 > ,
			debugText: < function reg: 40 > ,
			itemDropQuery: < function reg: 40 > ,
			rectTileCollision: < function reg: 40 > ,
			entityDescription: < function reg: 40 > ,
			dayLength: < function reg: 40 > ,
			nearestTo: < function reg: 40 > ,
			materialColor: < function reg: 40 > ,
			rectCollision: < function reg: 40 > ,
			timeOfDay: < function reg: 40 > ,
			entityType: < function reg: 40 > ,
			containerStackItems: < function reg: 40 > ,
			entityHealth: < function reg: 40 > ,
			containerTakeAll: < function reg: 40 > ,
			setProperty: < function reg: 40 > ,
			containerTakeNumItemsAt: < function reg: 40 > ,
			entityGender: < function reg: 40 > ,
			underground: < function reg: 40 > ,
			containerOpen: < function reg: 40 > ,
			spawnMonster: < function reg: 40 > ,
			materialHueShift: < function reg: 40 > ,
			entityPosition: < function reg: 40 > ,
			stagehandType: < function reg: 40 > ,
			spawnTreasure: < function reg: 40 > ,
			getObjectParameter: < function reg: 40 > ,
			terrestrial: < function reg: 40 > ,
			containerConsume: < function reg: 40 > ,
			isTileProtected: < function reg: 40 > ,
			containerAvailable: < function reg: 40 > ,
			platformerPathStart: < function reg: 40 > ,
			debugPoint: < function reg: 40 > ,
			objectLineQuery: < function reg: 40 > ,
			spawnLiquid: < function reg: 40 > ,
			containerItemAt: < function reg: 40 > ,
			damageTileArea: < function reg: 40 > ,
			mod: < function reg: 40 > ,
			getProperty: < function reg: 40 > ,
			containerItemsFitWhere: < function reg: 40 > ,
			time: < function reg: 40 > ,
			pointTileCollision: < function reg: 40 > ,
			lineCollision: < function reg: 40 > ,
			containerSwapItems: < function reg: 40 > ,
			debugPoly: < function reg: 40 > ,
			liquidAt: < function reg: 40 > ,
			setMaterialColor: < function reg: 40 > ,
			findUniqueEntity: < function reg: 40 > ,
			spawnProjectile: < function reg: 40 > ,
			containerItems: < function reg: 40 > ,
			objectQuery: < function reg: 40 > ,
			pointCollision: < function reg: 40 > ,
			gravity: < function reg: 40 > ,
			entityLineQuery: < function reg: 40 > ,
			xwrap: < function reg: 40 > ,
			breathable: < function reg: 40 > ,
			placeObject: < function reg: 40 > ,
			loungeableQuery: < function reg: 40 > ,
			npcLineQuery: < function reg: 40 > ,
			containerItemApply: < function reg: 40 > ,
			containerConsumeAt: < function reg: 40 > ,
			debugLine: < function reg: 40 > ,
			objectSpaces: < function reg: 40 > ,
			playerQuery: < function reg: 40 > ,
			resolvePolyCollision: < function reg: 40 > ,
			spawnNpc: < function reg: 40 > ,
			containerSwapItemsNoCombine: < function reg: 40 > ,
			spawnStagehand: < function reg: 40 > ,
			day: < function reg: 40 > ,
			size: < function reg: 40 > ,
			callScriptedEntity: < function reg: 40 > ,
			windLevel: < function reg: 40 > ,
			containerItemsCanFit: < function reg: 40 > ,
			containerTakeAt: < function reg: 40 > ,
			containerPutItemsAt: < function reg: 40 > ,
			spawnItem: < function reg: 40 > ,
			isMonster: < function reg: 40 > ,
			entityMouthPosition: < function reg: 40 > ,
			entityName: < function reg: 40 > ,
			entityUniqueId: < function reg: 40 > ,
			entityDamageTeam: < function reg: 40 > ,
			entityVelocity: < function reg: 40 >
		},
		error: < function reg: 58 > ,
		rawget: < function reg: 58 > ,
		getmetatable: < function reg: 58 > ,
		math: {
			tan: < function reg: 40 > ,
			abs: < function reg: 40 > ,
			exp: < function reg: 40 > ,
			atan: < function reg: 40 > ,
			pi: 3.14159,
			random: < function reg: 40 > ,
			deg: < function reg: 40 > ,
			mininteger: -9223372036854775808,
			modf: < function reg: 40 > ,
			floor: < function reg: 40 > ,
			maxinteger: 9223372036854775807,
			ceil: < function reg: 40 > ,
			min: < function reg: 40 > ,
			huge: inf,
			asin: < function reg: 40 > ,
			fmod: < function reg: 40 > ,
			acos: < function reg: 40 > ,
			type: < function reg: 40 > ,
			log: < function reg: 40 > ,
			sin: < function reg: 40 > ,
			tointeger: < function reg: 40 > ,
			randomseed: < function reg: 40 > ,
			rad: < function reg: 40 > ,
			max: < function reg: 40 > ,
			cos: < function reg: 40 > ,
			sqrt: < function reg: 40 > ,
			ult: < function reg: 40 >
		},
		string: {
			unpack: < function reg: 40 > ,
			pack: < function reg: 40 > ,
			char: < function reg: 40 > ,
			sub: < function reg: 40 > ,
			lower: < function reg: 40 > ,
			byte: < function reg: 40 > ,
			reverse: < function reg: 40 > ,
			gmatch: < function reg: 40 > ,
			upper: < function reg: 40 > ,
			len: < function reg: 40 > ,
			find: < function reg: 40 > ,
			match: < function reg: 40 > ,
			dump: < function reg: 40 > ,
			gsub: < function reg: 40 > ,
			split: < function reg: 40 > ,
			rep: < function reg: 40 > ,
			packsize: < function reg: 40 > ,
			format: < function reg: 40 >
		},
		setmetatable: < function reg: 58 > ,
		jarray: < function reg: 58 > ,
		tonumber: < function reg: 58 > ,
		ipairs: < function reg: 58 >
	}
}