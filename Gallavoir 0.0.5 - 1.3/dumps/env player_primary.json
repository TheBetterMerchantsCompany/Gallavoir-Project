{
	bind: < function reg: 74 > ,
	_SBLOADED: {
		/scripts/status.lua: true,
		/scripts/achievements.lua: true
	},
	copy: < function reg: 74 > ,
	entityEventFields: < function reg: 74 > ,
	math: {
		asin: < function reg: 75 > ,
		cos: < function reg: 75 > ,
		huge: inf,
		log: < function reg: 75 > ,
		atan: < function reg: 75 > ,
		sin: < function reg: 75 > ,
		maxinteger: 9223372036854775807,
		exp: < function reg: 75 > ,
		random: < function reg: 75 > ,
		mininteger: -9223372036854775808,
		randomseed: < function reg: 75 > ,
		deg: < function reg: 75 > ,
		pi: 3.14159,
		max: < function reg: 75 > ,
		acos: < function reg: 75 > ,
		ult: < function reg: 75 > ,
		type: < function reg: 75 > ,
		floor: < function reg: 75 > ,
		tointeger: < function reg: 75 > ,
		tan: < function reg: 75 > ,
		ceil: < function reg: 75 > ,
		rad: < function reg: 75 > ,
		sqrt: < function reg: 75 > ,
		modf: < function reg: 75 > ,
		abs: < function reg: 75 > ,
		min: < function reg: 75 > ,
		fmod: < function reg: 75 >
	},
	pairs: < function reg: 74 > ,
	type: < function reg: 74 > ,
	require: < function reg: 74 > ,
	applyDefaults: < function reg: 74 > ,
	path: < function reg: 74 > ,
	applyDamageRequest: < function reg: 74 > ,
	root: {
		createTreasure: < function reg: 75 > ,
		monsterPortrait: < function reg: 75 > ,
		evalFunction2: < function reg: 75 > ,
		imageSize: < function reg: 75 > ,
		hasTech: < function reg: 75 > ,
		itemDescriptorsMatch: < function reg: 75 > ,
		itemTags: < function reg: 75 > ,
		assetJson: < function reg: 75 > ,
		materialConfig: < function reg: 75 > ,
		monsterMovementSettings: < function reg: 75 > ,
		projectileConfig: < function reg: 75 > ,
		isTreasurePool: < function reg: 75 > ,
		treeFoliageDirectory: < function reg: 75 > ,
		monsterParameters: < function reg: 75 > ,
		techConfig: < function reg: 75 > ,
		liquidStatusEffects: < function reg: 75 > ,
		evalFunction: < function reg: 75 > ,
		recipesForItem: < function reg: 75 > ,
		npcConfig: < function reg: 75 > ,
		materialHealth: < function reg: 75 > ,
		techType: < function reg: 75 > ,
		modConfig: < function reg: 75 > ,
		itemType: < function reg: 75 > ,
		getMatchingTenants: < function reg: 75 > ,
		createBiome: < function reg: 75 > ,
		npcPortrait: < function reg: 75 > ,
		collectables: < function reg: 75 > ,
		liquidName: < function reg: 75 > ,
		itemConfig: < function reg: 75 > ,
		generateName: < function reg: 75 > ,
		materialMiningSound: < function reg: 75 > ,
		tenantConfig: < function reg: 75 > ,
		itemHasTag: < function reg: 75 > ,
		nonEmptyRegion: < function reg: 75 > ,
		materialFootstepSound: < function reg: 75 > ,
		questConfig: < function reg: 75 > ,
		monsterSkillParameter: < function reg: 75 > ,
		systemObjectTypeConfig: < function reg: 75 > ,
		createItem: < function reg: 75 > ,
		npcVariant: < function reg: 75 > ,
		elementalResistance: < function reg: 75 > ,
		treeStemDirectory: < function reg: 75 > ,
		liquidId: < function reg: 75 > ,
		loadVersionedJson: < function reg: 75 > ,
		makeCurrentVersionedJson: < function reg: 75 > ,
		projectileGravityMultiplier: < function reg: 75 > ,
		collection: < function reg: 75 > ,
		imageSpaces: < function reg: 75 > ,
		dungeonMetadata: < function reg: 75 > ,
		liquidConfig: < function reg: 75 >
	},
	jobject: < function reg: 74 > ,
	coroutine: {
		isyieldable: < function reg: 75 > ,
		yield: < function reg: 75 > ,
		create: < function reg: 75 > ,
		wrap: < function reg: 75 > ,
		running: < function reg: 75 > ,
		status: < function reg: 75 > ,
		resume: < function reg: 75 >
	},
	print: < function reg: 74 > ,
	message: {
		setHandler: < function reg: 75 >
	},
	next: < function reg: 74 > ,
	shallowCopy: < function reg: 74 > ,
	isEmpty: < function reg: 74 > ,
	sb: {
		makeRandomSource: < function reg: 75 > ,
		interpolateSinEase: < function reg: 75 > ,
		nrand: < function reg: 75 > ,
		logError: < function reg: 75 > ,
		setLogMap: < function reg: 75 > ,
		staticRandomI32Range: < function reg: 75 > ,
		jsonMerge: < function reg: 75 > ,
		replaceTags: < function reg: 75 > ,
		jsonQuery: < function reg: 75 > ,
		makePerlinSource: < function reg: 75 > ,
		staticRandomDoubleRange: < function reg: 75 > ,
		print: < function reg: 75 > ,
		logInfo: < function reg: 75 > ,
		printJson: < function reg: 75 > ,
		logWarn: < function reg: 75 > ,
		staticRandomDouble: < function reg: 75 > ,
		makeUuid: < function reg: 75 > ,
		staticRandomI32: < function reg: 75 >
	},
	jremove: < function reg: 74 > ,
	jsonPath: < function reg: 74 > ,
	inflictedDamageCallback: < function reg: 74 > ,
	jsize: < function reg: 74 > ,
	string: {
		gsub: < function reg: 75 > ,
		gmatch: < function reg: 75 > ,
		reverse: < function reg: 75 > ,
		sub: < function reg: 75 > ,
		pack: < function reg: 75 > ,
		char: < function reg: 75 > ,
		packsize: < function reg: 75 > ,
		rep: < function reg: 75 > ,
		format: < function reg: 75 > ,
		byte: < function reg: 75 > ,
		dump: < function reg: 75 > ,
		unpack: < function reg: 75 > ,
		len: < function reg: 75 > ,
		match: < function reg: 75 > ,
		upper: < function reg: 75 > ,
		lower: < function reg: 75 > ,
		find: < function reg: 75 >
	},
	nostalgicGreenery_update: < function reg: 74 > ,
	shuffle: < function reg: 74 > ,
	compare: < function reg: 74 > ,
	setPath: < function reg: 74 > ,
	vec2: {
		mag: < function reg: 75 > ,
		angle: < function reg: 75 > ,
		print: < function reg: 75 > ,
		mul: < function reg: 75 > ,
		floor: < function reg: 75 > ,
		eq: < function reg: 75 > ,
		div: < function reg: 75 > ,
		rotate: < function reg: 75 > ,
		intersect: < function reg: 75 > ,
		withAngle: < function reg: 75 > ,
		dot: < function reg: 75 > ,
		approach: < function reg: 75 > ,
		norm: < function reg: 75 > ,
		sub: < function reg: 75 > ,
		add: < function reg: 75 >
	},
	construct: < function reg: 74 > ,
	jarray: < function reg: 74 > ,
	generateSeed: < function reg: 74 > ,
	utf8: {
		offset: < function reg: 75 > ,
		charpattern: [, char: < function reg: 75 > , codepoint: < function reg: 75 > , codes: < function reg: 75 > , len: < function reg: 75 >
		},
		recordEvent: < function reg: 74 > ,
		FSM: {
			update: < function reg: 75 > ,
			new: < function reg: 75 > ,
			set: < function reg: 75 > ,
			resume: < function reg: 75 >
		},
		init: < function reg: 74 > ,
		util: {
			tableWrap: < function reg: 75 > ,
			mergeLists: < function reg: 75 > ,
			mapWithKeys: < function reg: 75 > ,
			randomDirection: < function reg: 75 > ,
			untilNotEmpty: < function reg: 75 > ,
			fold: < function reg: 75 > ,
			debugRect: < function reg: 75 > ,
			absolutePath: < function reg: 75 > ,
			wrapFunction: < function reg: 75 > ,
			tableToString: < function reg: 75 > ,
			nearestPosition: < function reg: 75 > ,
			interval: < function reg: 75 > ,
			takeEnd: < function reg: 75 > ,
			sum: < function reg: 75 > ,
			aimVector: < function reg: 75 > ,
			count: < function reg: 75 > ,
			angleDiff: < function reg: 75 > ,
			debugLog: < function reg: 75 > ,
			rep: < function reg: 75 > ,
			replaceTag: < function reg: 75 > ,
			uniqueEntityTracker: < function reg: 75 > ,
			boundBox: < function reg: 75 > ,
			randomFromList: < function reg: 75 > ,
			blockSensorTest: < function reg: 75 > ,
			hashString: < function reg: 75 > ,
			trackExistingTarget: < function reg: 75 > ,
			debugPoint: < function reg: 75 > ,
			easeInOutExp: < function reg: 75 > ,
			wrapAngle: < function reg: 75 > ,
			tableKeys: < function reg: 75 > ,
			toRadians: < function reg: 75 > ,
			parallel: < function reg: 75 > ,
			mergeTable: < function reg: 75 > ,
			isTimeInRange: < function reg: 75 > ,
			split: < function reg: 75 > ,
			tileCenter: < function reg: 75 > ,
			lerp: < function reg: 75 > ,
			randomChoice: < function reg: 75 > ,
			incWrap: < function reg: 75 > ,
			multipleEntityTracker: < function reg: 75 > ,
			tableValues: < function reg: 75 > ,
			each: < function reg: 75 > ,
			seedTime: < function reg: 75 > ,
			stringTags: < function reg: 75 > ,
			tableSize: < function reg: 75 > ,
			round: < function reg: 75 > ,
			filter: < function reg: 75 > ,
			randomIntInRange: < function reg: 75 > ,
			debugCircle: < function reg: 75 > ,
			toDirection: < function reg: 75 > ,
			randomInRange: < function reg: 75 > ,
			zipWith: < function reg: 75 > ,
			easeInOutQuad: < function reg: 75 > ,
			debugPoly: < function reg: 75 > ,
			run: < function reg: 75 > ,
			sigmoid: < function reg: 75 > ,
			debugLine: < function reg: 75 > ,
			take: < function reg: 75 > ,
			map: < function reg: 75 > ,
			weightedRandom: < function reg: 75 > ,
			find: < function reg: 75 > ,
			interpolateSigmoid: < function reg: 75 > ,
			trackTarget: < function reg: 75 > ,
			wrap: < function reg: 75 > ,
			untilNotNil: < function reg: 75 > ,
			setDebug: < function reg: 75 > ,
			predictedPosition: < function reg: 75 > ,
			interpolateHalfSigmoid: < function reg: 75 > ,
			debugText: < function reg: 75 > ,
			clamp: < function reg: 75 > ,
			easeInOutSin: < function reg: 75 > ,
			toList: < function reg: 75 > ,
			pathDirectory: < function reg: 75 > ,
			appendLists: < function reg: 75 > ,
			keys: < function reg: 75 > ,
			closestValidTarget: < function reg: 75 > ,
			wait: < function reg: 75 >
		},
		animator: {
			setFlipped: < function reg: 75 > ,
			setPartTag: < function reg: 75 > ,
			setAnimationState: < function reg: 75 > ,
			transformTransformationGroup: < function reg: 75 > ,
			setSoundVolume: < function reg: 75 > ,
			setSoundPool: < function reg: 75 > ,
			partProperty: < function reg: 75 > ,
			setLightPosition: < function reg: 75 > ,
			setGlobalTag: < function reg: 75 > ,
			setLightColor: < function reg: 75 > ,
			burstParticleEmitter: < function reg: 75 > ,
			setParticleEmitterOffsetRegion: < function reg: 75 > ,
			setSoundPitch: < function reg: 75 > ,
			setEffectActive: < function reg: 75 > ,
			stopAllSounds: < function reg: 75 > ,
			partPoint: < function reg: 75 > ,
			setLightActive: < function reg: 75 > ,
			rotateGroup: < function reg: 75 > ,
			rotateTransformationGroup: < function reg: 75 > ,
			partPoly: < function reg: 75 > ,
			setParticleEmitterBurstCount: < function reg: 75 > ,
			animationStateProperty: < function reg: 75 > ,
			hasTransformationGroup: < function reg: 75 > ,
			setSoundPosition: < function reg: 75 > ,
			currentRotationAngle: < function reg: 75 > ,
			hasSound: < function reg: 75 > ,
			translateTransformationGroup: < function reg: 75 > ,
			playSound: < function reg: 75 > ,
			animationState: < function reg: 75 > ,
			setAnimationRate: < function reg: 75 > ,
			resetTransformationGroup: < function reg: 75 > ,
			scaleTransformationGroup: < function reg: 75 > ,
			setLightPointAngle: < function reg: 75 > ,
			setParticleEmitterEmissionRate: < function reg: 75 > ,
			setParticleEmitterActive: < function reg: 75 >
		},
		ipairs: < function reg: 74 > ,
		contains: < function reg: 74 > ,
		ControlMap: {
			contains: < function reg: 75 > ,
			clear: < function reg: 75 > ,
			setActive: < function reg: 75 > ,
			new: < function reg: 75 > ,
			values: < function reg: 75 > ,
			add: < function reg: 75 >
		},
		jresize: < function reg: 74 > ,
		self: {
			lastYVelocity: -1.98958,
			inflictedDamage: {
				update: < function reg: 79 > ,
				callback: < function reg: 79 > ,
				pollFunction: < function reg: 79 > ,
				timestep: 1
			},
			suffocateSoundTimer: 0,
			hitInvulnerabilityTime: 0,
			fallDistance: 0,
			shieldHitInvulnerabilityTime: 0,
			lastYPosition: 1026.5
		},
		os: {
			difftime: < function reg: 75 > ,
			clock: < function reg: 75 > ,
			time: < function reg: 75 >
		},
		extend: < function reg: 74 > ,
		_: {},
		rawlen: < function reg: 74 > ,
		world: {
			containerItemApply: < function reg: 75 > ,
			inSurfaceLayer: < function reg: 75 > ,
			entityHandItemDescriptor: < function reg: 75 > ,
			loungeableOccupied: < function reg: 75 > ,
			itemDropItem: < function reg: 75 > ,
			isNpc: < function reg: 75 > ,
			entityExists: < function reg: 75 > ,
			size: < function reg: 75 > ,
			objectAt: < function reg: 75 > ,
			spawnVehicle: < function reg: 75 > ,
			type: < function reg: 75 > ,
			platformerPathStart: < function reg: 75 > ,
			containerTakeNumItemsAt: < function reg: 75 > ,
			lineTileCollisionPoint: < function reg: 75 > ,
			containerItemAt: < function reg: 75 > ,
			threatLevel: < function reg: 75 > ,
			magnitude: < function reg: 75 > ,
			containerSize: < function reg: 75 > ,
			containerAddItems: < function reg: 75 > ,
			entitySpecies: < function reg: 75 > ,
			xwrap: < function reg: 75 > ,
			lightLevel: < function reg: 75 > ,
			spawnStagehand: < function reg: 75 > ,
			lineTileCollision: < function reg: 75 > ,
			destroyLiquid: < function reg: 75 > ,
			materialColor: < function reg: 75 > ,
			entityCanDamage: < function reg: 75 > ,
			objectQuery: < function reg: 75 > ,
			day: < function reg: 75 > ,
			entityDescription: < function reg: 75 > ,
			rectTileCollision: < function reg: 75 > ,
			entityHandItem: < function reg: 75 > ,
			findUniqueEntity: < function reg: 75 > ,
			placeMaterial: < function reg: 75 > ,
			entityTypeName: < function reg: 75 > ,
			containerItemsFitWhere: < function reg: 75 > ,
			damageTiles: < function reg: 75 > ,
			farmableStage: < function reg: 75 > ,
			entityType: < function reg: 75 > ,
			pointCollision: < function reg: 75 > ,
			rectCollision: < function reg: 75 > ,
			loungeableQuery: < function reg: 75 > ,
			npcQuery: < function reg: 75 > ,
			entityAggressive: < function reg: 75 > ,
			material: < function reg: 75 > ,
			isTileProtected: < function reg: 75 > ,
			containerItemsCanFit: < function reg: 75 > ,
			lineCollision: < function reg: 75 > ,
			timeOfDay: < function reg: 75 > ,
			dayLength: < function reg: 75 > ,
			tileIsOccupied: < function reg: 75 > ,
			callScriptedEntity: < function reg: 75 > ,
			debugLine: < function reg: 75 > ,
			spawnNpc: < function reg: 75 > ,
			gravity: < function reg: 75 > ,
			damageTileArea: < function reg: 75 > ,
			stagehandType: < function reg: 75 > ,
			containerConsumeAt: < function reg: 75 > ,
			liquidAlongLine: < function reg: 75 > ,
			breathable: < function reg: 75 > ,
			containerTakeAll: < function reg: 75 > ,
			entityHasCountOfItem: < function reg: 75 > ,
			debugPoint: < function reg: 75 > ,
			entityGender: < function reg: 75 > ,
			entityMouthPosition: < function reg: 75 > ,
			collisionBlocksAlongLine: < function reg: 75 > ,
			distance: < function reg: 75 > ,
			setMaterialColor: < function reg: 75 > ,
			getObjectParameter: < function reg: 75 > ,
			containerSwapItems: < function reg: 75 > ,
			spawnLiquid: < function reg: 75 > ,
			windLevel: < function reg: 75 > ,
			spawnTreasure: < function reg: 75 > ,
			containerSwapItemsNoCombine: < function reg: 75 > ,
			mod: < function reg: 75 > ,
			entityQuery: < function reg: 75 > ,
			underground: < function reg: 75 > ,
			objectSpaces: < function reg: 75 > ,
			playerQuery: < function reg: 75 > ,
			time: < function reg: 75 > ,
			containerTakeAt: < function reg: 75 > ,
			containerAvailable: < function reg: 75 > ,
			entityCurrency: < function reg: 75 > ,
			containerItems: < function reg: 75 > ,
			containerConsume: < function reg: 75 > ,
			monsterType: < function reg: 75 > ,
			debugPoly: < function reg: 75 > ,
			containerStackItems: < function reg: 75 > ,
			resolvePolyCollision: < function reg: 75 > ,
			entityUniqueId: < function reg: 75 > ,
			monsterQuery: < function reg: 75 > ,
			oceanLevel: < function reg: 75 > ,
			findPlatformerPath: < function reg: 75 > ,
			entityLineQuery: < function reg: 75 > ,
			getProperty: < function reg: 75 > ,
			itemDropQuery: < function reg: 75 > ,
			containerOpen: < function reg: 75 > ,
			entityPosition: < function reg: 75 > ,
			objectLineQuery: < function reg: 75 > ,
			containerClose: < function reg: 75 > ,
			liquidAt: < function reg: 75 > ,
			spawnMonster: < function reg: 75 > ,
			environmentStatusEffects: < function reg: 75 > ,
			isMonster: < function reg: 75 > ,
			npcType: < function reg: 75 > ,
			entityVelocity: < function reg: 75 > ,
			setProperty: < function reg: 75 > ,
			sendEntityMessage: < function reg: 75 > ,
			modHueShift: < function reg: 75 > ,
			nearestTo: < function reg: 75 > ,
			placeMod: < function reg: 75 > ,
			containerPutItemsAt: < function reg: 75 > ,
			entityPortrait: < function reg: 75 > ,
			materialHueShift: < function reg: 75 > ,
			npcLineQuery: < function reg: 75 > ,
			entityHealth: < function reg: 75 > ,
			spawnItem: < function reg: 75 > ,
			debugText: < function reg: 75 > ,
			pointTileCollision: < function reg: 75 > ,
			polyCollision: < function reg: 75 > ,
			placeObject: < function reg: 75 > ,
			polyContains: < function reg: 75 > ,
			entityDamageTeam: < function reg: 75 > ,
			terrestrial: < function reg: 75 > ,
			spawnProjectile: < function reg: 75 > ,
			entityName: < function reg: 75 >
		},
		mcontroller: {
			liquidId: < function reg: 75 > ,
			liquidMovement: < function reg: 75 > ,
			canJump: < function reg: 75 > ,
			zeroG: < function reg: 75 > ,
			crouching: < function reg: 75 > ,
			liquidPercentage: < function reg: 75 > ,
			setPosition: < function reg: 75 > ,
			setRotation: < function reg: 75 > ,
			controlDown: < function reg: 75 > ,
			walking: < function reg: 75 > ,
			groundMovement: < function reg: 75 > ,
			controlModifiers: < function reg: 75 > ,
			controlFly: < function reg: 75 > ,
			isColliding: < function reg: 75 > ,
			xPosition: < function reg: 75 > ,
			atWorldLimit: < function reg: 75 > ,
			controlApproachVelocity: < function reg: 75 > ,
			setYVelocity: < function reg: 75 > ,
			isCollisionStuck: < function reg: 75 > ,
			stickingDirection: < function reg: 75 > ,
			autoClearControls: < function reg: 75 > ,
			flying: < function reg: 75 > ,
			controlJump: < function reg: 75 > ,
			velocity: < function reg: 75 > ,
			setVelocity: < function reg: 75 > ,
			controlFace: < function reg: 75 > ,
			controlForce: < function reg: 75 > ,
			running: < function reg: 75 > ,
			controlRotation: < function reg: 75 > ,
			setYPosition: < function reg: 75 > ,
			anchorState: < function reg: 75 > ,
			setXPosition: < function reg: 75 > ,
			controlApproachXVelocity: < function reg: 75 > ,
			controlHoldJump: < function reg: 75 > ,
			controlParameters: < function reg: 75 > ,
			mass: < function reg: 75 > ,
			collisionBody: < function reg: 75 > ,
			baseParameters: < function reg: 75 > ,
			onGround: < function reg: 75 > ,
			position: < function reg: 75 > ,
			setXVelocity: < function reg: 75 > ,
			pathfinding: < function reg: 75 > ,
			clearControls: < function reg: 75 > ,
			falling: < function reg: 75 > ,
			setAutoClearControls: < function reg: 75 > ,
			controlMove: < function reg: 75 > ,
			movingDirection: < function reg: 75 > ,
			addMomentum: < function reg: 75 > ,
			controlApproachVelocityAlongAngle: < function reg: 75 > ,
			jumping: < function reg: 75 > ,
			collisionPoly: < function reg: 75 > ,
			yVelocity: < function reg: 75 > ,
			xVelocity: < function reg: 75 > ,
			rotation: < function reg: 75 > ,
			controlPathMove: < function reg: 75 > ,
			yPosition: < function reg: 75 > ,
			isNullColliding: < function reg: 75 > ,
			boundBox: < function reg: 75 > ,
			translate: < function reg: 75 > ,
			resetAnchorState: < function reg: 75 > ,
			controlAcceleration: < function reg: 75 > ,
			facingDirection: < function reg: 75 > ,
			setAnchorState: < function reg: 75 > ,
			controlCrouch: < function reg: 75 > ,
			controlApproachYVelocity: < function reg: 75 >
		},
		rawequal: < function reg: 74 > ,
		tostring: < function reg: 74 > ,
		entity: {
			persistent: < function reg: 75 > ,
			isValidTarget: < function reg: 75 > ,
			distanceToEntity: < function reg: 75 > ,
			damageTeam: < function reg: 75 > ,
			uniqueId: < function reg: 75 > ,
			entityInSight: < function reg: 75 > ,
			entityType: < function reg: 75 > ,
			id: < function reg: 75 > ,
			position: < function reg: 75 >
		},
		script: {
			updateDt: < function reg: 75 > ,
			setUpdateDelta: < function reg: 75 >
		},
		status: {
			removeEphemeralEffect: < function reg: 75 > ,
			resourceNames: < function reg: 75 > ,
			clearPersistentEffects: < function reg: 75 > ,
			inflictedHitsSince: < function reg: 75 > ,
			setResourcePercentage: < function reg: 75 > ,
			resourceMax: < function reg: 75 > ,
			resource: < function reg: 75 > ,
			setResource: < function reg: 75 > ,
			activeUniqueStatusEffectSummary: < function reg: 75 > ,
			primaryDirectives: < function reg: 75 > ,
			setPrimaryDirectives: < function reg: 75 > ,
			damageTakenSince: < function reg: 75 > ,
			clearAllPersistentEffects: < function reg: 75 > ,
			resourceLocked: < function reg: 75 > ,
			addPersistentEffects: < function reg: 75 > ,
			overConsumeResource: < function reg: 75 > ,
			clearEphemeralEffects: < function reg: 75 > ,
			consumeResource: < function reg: 75 > ,
			applySelfDamageRequest: < function reg: 75 > ,
			resetResource: < function reg: 75 > ,
			addEphemeralEffects: < function reg: 75 > ,
			addPersistentEffect: < function reg: 75 > ,
			setStatusProperty: < function reg: 75 > ,
			statPositive: < function reg: 75 > ,
			stat: < function reg: 75 > ,
			setResourceLocked: < function reg: 75 > ,
			statusProperty: < function reg: 75 > ,
			giveResource: < function reg: 75 > ,
			addEphemeralEffect: < function reg: 75 > ,
			modifyResource: < function reg: 75 > ,
			resourcePercentage: < function reg: 75 > ,
			getPersistentEffects: < function reg: 75 > ,
			modifyResourcePercentage: < function reg: 75 > ,
			inflictedDamageSince: < function reg: 75 > ,
			resetAllResources: < function reg: 75 > ,
			resourcePositive: < function reg: 75 > ,
			setPersistentEffects: < function reg: 75 > ,
			isResource: < function reg: 75 >
		},
		overheadBars: < function reg: 74 > ,
		update: < function reg: 74 > ,
		xpcall: < function reg: 74 > ,
		Profiler: {
			dump: < function reg: 75 > ,
			tick: < function reg: 75 > ,
			new: < function reg: 75 > ,
			stop: < function reg: 75 > ,
			start: < function reg: 75 >
		},
		pcall: < function reg: 74 > ,
		notifyResourceConsumed: < function reg: 74 > ,
		_VERSION: Lua 5.3,
		assert: < function reg: 74 > ,
		rawset: < function reg: 74 > ,
		error: < function reg: 74 > ,
		xor: < function reg: 74 > ,
		setmetatable: < function reg: 74 > ,
		tonumber: < function reg: 74 > ,
		damageListener: < function reg: 74 > ,
		worldEventFields: < function reg: 74 > ,
		getmetatable: < function reg: 74 > ,
		table: {
			pack: < function reg: 75 > ,
			unpack: < function reg: 75 > ,
			insert: < function reg: 75 > ,
			concat: < function reg: 75 > ,
			move: < function reg: 75 > ,
			sort: < function reg: 75 > ,
			remove: < function reg: 75 >
		},
		shuffled: < function reg: 74 > ,
		jsonSetPath: < function reg: 74 > ,
		select: < function reg: 74 > ,
		rawget: < function reg: 74 >
	}